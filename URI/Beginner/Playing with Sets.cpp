#include <stdio.h>
#include <bitset>

std::bitset<64> xs[10001];
int T, N, v1, v2, vn, j;

int main () {
	scanf("%d", &T);
	
	while ( T-- ){
		scanf("%d", &N);

		for (int i = 0; i < N; i++){
			scanf("%d", &vn);
			xs[i] = 0;
			for (int j = 0; j < vn; j++){
				scanf("%d", &v1);
				xs[i][v1] = 1;
			}
		}
		
		scanf("%d", &vn);
		for (int i = 0; i < vn; i++){
			scanf("%d %d %d", &j, &v1, &v2);
			if (j == 1) printf("%d\n", int((xs[v1-1]&xs[v2-1]).count()));
			else printf("%d\n", int((xs[v1-1]|xs[v2-1]).count()));
		}
	}

	return 0;
}
/*
			//c = __builtin_popcount(Sets[v-1]|Sets[x-1]);
1
3
12 1 2 3 4 5 6 7 8 9 10 11 12
12 5 10 15 20 25 30 35 40 45 50 55 60
6 41 42 43 44 45 46
2
2 1 2
2 3 2


input:-
-----------
1
4
1 1
2 1 5
3 2 4 6
4 1 3 5 7
5
1 1 2
1 1 4
2 1 4
2 3 4
1 2 4 


0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 
0 1 1 1 1 1 1 1 1 1 1  1  1  1  0  1  0  0  1  0  1  0  0  1  0  1  0  0  1  0  1  0  0  1  1  1  1  1  1  1  1  1  1  1  1  1  


46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 
0  1  0  0  1  0  1  0  0  1  0  1  0  0  1  0  1  0


output:-
-----------
2
3
5 1 2 3 4 5
6 2 3 4 5 6 7
1 52
4
1 1 3
1 1 2
2 1 3
2 1 2
10
5 4 23 17 2 5
3 10 20 30
4 1 2 3 4
12 1 2 3 4 5 6 7 8 9 10 11 12
12 5 10 15 20 25 30 35 40 45 50 55 60
1 7
1 8
6 41 42 43 44 45 46
5 60 59 58 44 45
2 2 3
10
1 2 5
1 6 7
1 1 10
2 4 5
2 5 6
2 8 5
1 3 10
1 4 3
2 9 10
2 9 1


Problem: 
*/
